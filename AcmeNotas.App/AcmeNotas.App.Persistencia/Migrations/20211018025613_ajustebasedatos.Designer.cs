// <auto-generated />
using System;
using AcmeNotas.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AcmeNotas.App.Persistencia.Migrations
{
    [DbContext(typeof(Conexion))]
    [Migration("20211018025613_ajustebasedatos")]
    partial class ajustebasedatos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("AcmeNotas.App.Dominio.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CodigoDepartamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDepartamento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("AcmeNotas.App.Dominio.Grupo", b =>
                {
                    b.Property<int>("GrupoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Ciclo")
                        .HasColumnType("int");

                    b.Property<string>("CodigoGrupo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormadorId")
                        .HasColumnType("int");

                    b.Property<int?>("HorarioId")
                        .HasColumnType("int");

                    b.Property<int?>("TutorId")
                        .HasColumnType("int");

                    b.HasKey("GrupoId");

                    b.HasIndex("FormadorId");

                    b.HasIndex("HorarioId");

                    b.HasIndex("TutorId");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("AcmeNotas.App.Dominio.GrupoEstudiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CodNotas")
                        .HasColumnType("int");

                    b.Property<string>("IdEstudiante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdGrupo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GrupoEstudiantes");
                });

            modelBuilder.Entity("AcmeNotas.App.Dominio.Horario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CodigoHorario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dia1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dia2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dia3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HoraFinal1")
                        .HasColumnType("int");

                    b.Property<int>("HoraFinal2")
                        .HasColumnType("int");

                    b.Property<int>("HoraFinal3")
                        .HasColumnType("int");

                    b.Property<int>("HoraInicio1")
                        .HasColumnType("int");

                    b.Property<int>("HoraInicio2")
                        .HasColumnType("int");

                    b.Property<int>("HoraInicio3")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("AcmeNotas.App.Dominio.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CodMunicipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("NombreMunicipio")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("AcmeNotas.App.Dominio.Nota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Nota1")
                        .HasColumnType("float");

                    b.Property<double>("Nota2")
                        .HasColumnType("float");

                    b.Property<double>("Nota3")
                        .HasColumnType("float");

                    b.Property<double>("Nota4")
                        .HasColumnType("float");

                    b.Property<double>("Nota5")
                        .HasColumnType("float");

                    b.Property<double>("NotaDefinitiva")
                        .HasColumnType("float");

                    b.Property<int?>("estudianteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("estudianteId");

                    b.ToTable("Notas");
                });

            modelBuilder.Entity("AcmeNotas.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MunicipioPersonaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PrimerRegistro")
                        .HasColumnType("bit");

                    b.Property<int?>("RolPersonaId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MunicipioPersonaId");

                    b.HasIndex("RolPersonaId");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("AcmeNotas.App.Dominio.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CodigoRol")
                        .HasColumnType("int");

                    b.Property<string>("NombreRol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("AcmeNotas.App.Dominio.Administrador", b =>
                {
                    b.HasBaseType("AcmeNotas.App.Dominio.Persona");

                    b.Property<string>("CodigoAdm")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("AcmeNotas.App.Dominio.Estudiante", b =>
                {
                    b.HasBaseType("AcmeNotas.App.Dominio.Persona");

                    b.Property<string>("CodigoEstudiante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GrupoId")
                        .HasColumnType("int");

                    b.HasIndex("GrupoId");

                    b.HasDiscriminator().HasValue("Estudiante");
                });

            modelBuilder.Entity("AcmeNotas.App.Dominio.Formador", b =>
                {
                    b.HasBaseType("AcmeNotas.App.Dominio.Persona");

                    b.Property<string>("CodigoFormador")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Formador");
                });

            modelBuilder.Entity("AcmeNotas.App.Dominio.Tutor", b =>
                {
                    b.HasBaseType("AcmeNotas.App.Dominio.Persona");

                    b.Property<string>("CodigoTutor")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Tutor");
                });

            modelBuilder.Entity("AcmeNotas.App.Dominio.Grupo", b =>
                {
                    b.HasOne("AcmeNotas.App.Dominio.Persona", "Formador")
                        .WithMany()
                        .HasForeignKey("FormadorId");

                    b.HasOne("AcmeNotas.App.Dominio.Horario", "Horario")
                        .WithMany()
                        .HasForeignKey("HorarioId");

                    b.HasOne("AcmeNotas.App.Dominio.Persona", "Tutor")
                        .WithMany()
                        .HasForeignKey("TutorId");

                    b.Navigation("Formador");

                    b.Navigation("Horario");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("AcmeNotas.App.Dominio.Municipio", b =>
                {
                    b.HasOne("AcmeNotas.App.Dominio.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId");

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("AcmeNotas.App.Dominio.Nota", b =>
                {
                    b.HasOne("AcmeNotas.App.Dominio.Estudiante", "estudiante")
                        .WithMany()
                        .HasForeignKey("estudianteId");

                    b.Navigation("estudiante");
                });

            modelBuilder.Entity("AcmeNotas.App.Dominio.Persona", b =>
                {
                    b.HasOne("AcmeNotas.App.Dominio.Municipio", "MunicipioPersona")
                        .WithMany()
                        .HasForeignKey("MunicipioPersonaId");

                    b.HasOne("AcmeNotas.App.Dominio.Rol", "RolPersona")
                        .WithMany()
                        .HasForeignKey("RolPersonaId");

                    b.Navigation("MunicipioPersona");

                    b.Navigation("RolPersona");
                });

            modelBuilder.Entity("AcmeNotas.App.Dominio.Estudiante", b =>
                {
                    b.HasOne("AcmeNotas.App.Dominio.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId");

                    b.Navigation("Grupo");
                });
#pragma warning restore 612, 618
        }
    }
}
